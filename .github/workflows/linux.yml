name: Linux

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        compiler: [g++-11, g++-12, g++-13, clang++-15, clang++-16, clang++-17, clang++-18]
        configuration: [Debug, Release]
        include:
          - os: ubuntu-24.04
            compiler: g++-14
            configuration: Debug
          - os: ubuntu-24.04
            compiler: g++-14
            configuration: Release
    steps:
    - uses: actions/checkout@v4
    - name: install g++-13
      if: matrix.compiler == 'g++-13' || matrix.compiler == 'clang++-18'
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update && sudo apt-get install -y g++-13
    - name: install clang++-16
      if: matrix.compiler == 'clang++-16'
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 16
    - name: install clang++-17
      if: matrix.compiler == 'clang++-17'
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 17
    - name: install clang++-18
      if: matrix.compiler == 'clang++-18'
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 18
    - name: configure
      run: CXX=${{ matrix.compiler }} cmake -Werror=dev -D CMAKE_BUILD_TYPE=${{ matrix.configuration }} -D BUILD_TESTS=1 -D CMAKE_COMPILE_WARNING_AS_ERROR=1 -B build
    - name: build
      run: cmake --build build -j $(nproc --all)
    - name: run unit tests
      run: ctest --test-dir build --output-on-failure --schedule-random -j $(nproc --all)
